var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.29,1,2.065]],["body/controllers/AppController.html",[0,2.047,1,3.275,2,1.634,3,0.446,4,0.391,5,0.391,6,3.386,7,0.625,8,1.733,9,4.855,10,1.634,11,0.032,12,0.91,13,4.056,14,1.383,15,1.883,16,0.63,17,0.832,18,2.917,19,3.386,20,0.446,21,0.02,22,2.132,23,2.944,24,1.503,25,4.056,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.092,29,2.065]],["body/modules/AppModule.html",[1,3.171,2,1.741,3,0.348,4,0.305,5,0.305,11,0.032,16,0.724,17,0.65,18,3.001,19,2.644,20,0.348,21,0.016,26,0.021,27,0.021,28,1.678,29,4.051,30,1.39,31,1.39,32,1.665,33,1.665,34,1.39,35,2.586,36,1.665,37,2.644,38,2.644,39,2.644,40,3.309,41,3.309,42,2.505,43,3.309,44,2.272,45,1.665,46,1.518,47,3.167,48,2.786,49,3.167,50,3.167,51,3.167,52,3.167,53,3.167]],["title/injectables/AppService.html",[18,1.684,54,0.783]],["body/injectables/AppService.html",[3,0.468,4,0.41,5,0.41,7,0.656,8,1.786,9,4.939,11,0.031,12,0.955,14,1.452,15,1.94,16,0.528,17,0.874,18,2.753,20,0.468,21,0.021,24,1.578,26,0.026,27,0.026,54,1.28,55,1.869,56,3.555,57,4.259,58,4.259,59,4.259]],["title/controllers/AuthController.html",[0,1.29,60,2.065]],["body/controllers/AuthController.html",[0,0.971,2,0.971,3,0.265,4,0.232,5,0.232,7,0.371,8,1.214,10,2.008,11,0.032,12,1.118,14,1.7,15,1.568,16,0.618,17,0.495,20,0.265,21,0.012,22,1.267,24,1.847,26,0.018,27,0.018,60,2.295,61,2.013,62,1.75,63,2.411,64,2.443,65,2.972,66,2.972,67,2.972,68,2.972,69,4.673,70,2.013,71,2.709,72,3.56,73,2.411,74,1.883,75,1.594,76,0.949,77,1.883,78,3.012,79,2.39,80,2.411,81,3.787,82,2.411,83,2.411,84,3.533,85,2.013,86,2.709,87,3.56,88,2.411,89,2.411,90,2.411,91,2.411,92,1.706,93,2.411,94,2.411,95,1.75,96,1.75,97,1.75,98,1.75,99,1.75,100,2.225,101,2.013,102,2.013,103,2.013,104,1.267,105,2.411,106,2.411,107,2.411,108,2.39,109,2.411,110,2.411,111,2.411,112,3.072,113,1.554,114,1.267,115,2.411,116,2.411,117,2.411,118,2.411,119,2.411,120,2.411,121,2.411,122,1.267,123,2.013,124,2.013,125,2.013,126,2.411]],["title/injectables/AuthGuard.html",[54,0.783,104,1.684]],["body/injectables/AuthGuard.html",[3,0.534,4,0.219,5,0.219,7,0.35,8,1.161,11,0.032,12,1.018,14,1.161,15,1.801,16,0.422,17,0.466,20,0.249,21,0.011,24,1.513,26,0.017,27,0.017,54,0.832,55,0.997,64,1.646,74,1.646,75,1.393,76,1.018,77,1.646,104,2.147,108,1.089,114,3.129,122,2.385,127,1.896,128,2.195,129,3.405,130,1.494,131,2.965,132,4.861,133,4.861,134,4.085,135,1.317,136,3.405,137,3.405,138,3.405,139,5.293,140,2.271,141,4.538,142,3.405,143,3.405,144,2.271,145,4.538,146,2.271,147,3.405,148,2.271,149,1.464,150,1.896,151,2.271,152,2.271,153,1.649,154,3.41,155,3.405,156,3.405,157,3.405,158,3.41,159,3.41,160,3.41,161,3.41,162,2.271,163,1.896,164,2.271,165,2.271,166,1.464,167,2.271,168,3.405,169,3.405,170,2.195,171,1.974,172,2.271,173,2.271,174,2.271,175,1.464,176,2.271,177,2.271,178,2.271,179,2.271,180,2.271,181,2.271,182,2.271,183,1.896]],["title/modules/AuthModule.html",[28,1.092,40,1.857]],["body/modules/AuthModule.html",[2,1.71,3,0.339,4,0.297,5,0.297,11,0.032,16,0.732,17,0.633,20,0.339,21,0.015,26,0.021,27,0.021,28,1.655,30,1.353,31,1.353,32,1.621,33,1.621,34,1.353,35,2.55,36,1.621,40,3.518,42,2.485,44,2.231,45,1.621,46,1.478,48,2.735,60,3.127,100,2.977,101,2.574,114,1.621,149,1.988,153,2.239,184,2.574,185,3.084,186,2.574,187,3.283,188,3.084,189,3.084,190,2.239,191,3.084,192,3.084,193,2.239,194,1.788,195,2.239,196,3.084,197,3.084,198,3.084,199,2.239,200,3.084,201,3.084,202,3.084,203,2.239,204,2.239,205,3.084,206,2.574,207,2.574]],["title/injectables/AuthService.html",[54,0.783,100,1.684]],["body/injectables/AuthService.html",[3,0.175,4,0.153,5,0.153,7,0.245,8,0.879,11,0.032,12,1.039,14,1.5,16,0.574,17,0.326,20,0.175,21,0.008,22,0.836,24,1.63,26,0.013,27,0.013,54,0.63,55,0.698,64,2.248,65,2.714,66,2.714,67,2.152,68,2.152,70,2.152,71,2.167,74,1.772,75,1.7,76,0.986,77,1.772,78,2.986,79,1.969,85,2.152,86,2.167,92,1.969,100,1.355,102,1.328,103,1.328,108,2.39,114,1.965,122,2.536,123,2.714,131,1.155,135,0.922,166,2.095,170,2.648,171,2.55,175,3.302,193,1.155,194,0.922,195,1.155,203,1.155,204,1.155,206,1.328,207,1.328,208,1.328,209,4.399,210,2.578,211,1.328,212,1.641,213,4.633,214,1.591,215,1.871,216,1.591,217,2.578,218,1.591,219,1.328,220,1.591,221,2.578,222,2.312,223,1.591,224,2.578,225,1.591,226,2.578,227,1.591,228,1.328,229,1.328,230,1.155,231,1.591,232,1.591,233,1.328,234,2.578,235,2.578,236,2.648,237,2.578,238,1.591,239,4.109,240,2.578,241,1.591,242,1.591,243,1.591,244,1.591,245,1.591,246,1.591,247,1.591,248,1.591,249,3.43,250,1.591,251,2.648,252,1.328,253,2.714,254,1.591,255,1.591,256,1.871,257,2.714,258,1.591,259,1.591,260,1.591,261,1.591,262,3.251,263,1.591,264,1.591,265,1.591,266,1.591,267,1.591,268,1.591,269,3.121,270,1.155,271,1.591,272,1.591,273,2.578,274,2.578,275,2.578,276,2.152,277,1.591,278,1.591,279,1.591,280,2.578,281,1.591,282,1.591,283,1.591,284,1.591,285,2.152,286,1.591,287,1.591]],["title/classes/CreateOrderDto.html",[21,0.016,288,1.684]],["body/classes/CreateOrderDto.html",[3,0.322,4,0.282,5,0.282,7,0.451,10,2.059,11,0.032,12,1.146,16,0.507,20,0.322,21,0.025,26,0.02,27,0.02,76,1.25,130,1.797,175,1.889,222,3.007,288,2.153,289,1.286,290,3.467,291,1.889,292,3.427,293,3.427,294,3.427,295,3.711,296,3.295,297,2.93,298,2.93,299,2.93,300,3.427,301,3.419,302,2.93,303,4.872,304,2.93,305,2.93,306,1.698,307,3.419,308,1.889,309,3.419,310,1.889,311,1.54,312,2.127,313,3.419,314,3.941,315,2.446,316,2.446,317,2.973,318,2.973,319,2.973,320,3.419,321,2.446,322,2.446,323,2.446,324,2.446,325,2.446]],["title/classes/CreateOrderItemDto.html",[21,0.016,296,2.065]],["body/classes/CreateOrderItemDto.html",[3,0.334,4,0.293,5,0.293,7,0.469,10,1.941,11,0.032,12,1.081,16,0.521,20,0.334,21,0.026,26,0.021,27,0.021,76,1.223,130,1.846,175,1.962,222,3.097,288,1.6,289,1.336,290,3.35,291,1.962,292,2.21,293,2.21,294,2.21,295,3.772,296,3.35,300,3.053,301,2.541,303,4.992,306,1.765,307,3.511,308,1.962,309,3.511,310,1.962,311,1.6,312,2.21,313,3.511,314,4.022,315,2.541,316,2.541,317,3.053,318,3.053,319,3.053,320,3.511,321,2.541,322,4.022,323,4.022,324,2.541,325,2.541,326,3.044,327,3.044,328,3.044]],["title/classes/CreateProductDto.html",[21,0.016,329,1.684]],["body/classes/CreateProductDto.html",[3,0.308,4,0.271,5,0.271,7,0.432,10,2.277,11,0.032,12,1.267,15,2.037,16,0.492,20,0.308,21,0.02,26,0.02,27,0.02,75,1.573,76,1.267,130,1.744,222,2.637,251,2.562,289,1.232,306,2.908,308,2.974,310,1.81,311,1.476,329,2.089,330,4.82,331,2.038,332,5.774,333,3.349,334,3.851,335,4.613,336,4.613,337,4.613,338,3.974,339,3.317,340,3.974,341,3.974,342,3.974,343,2.808,344,3.317,345,2.808,346,2.808,347,3.974,348,4.613,349,2.808,350,2.808,351,2.808,352,3.974,353,2.808,354,2.808,355,1.81,356,2.885,357,4.613,358,2.344,359,3.974]],["title/injectables/JwtStrategy.html",[54,0.783,187,1.857]],["body/injectables/JwtStrategy.html",[3,0.368,4,0.323,5,0.323,7,0.516,8,1.53,11,0.032,12,1.006,14,1.142,16,0.67,17,0.687,20,0.368,21,0.017,24,1.24,26,0.022,27,0.022,54,1.097,55,1.469,64,2.039,74,1.349,75,1.142,76,0.751,77,1.349,79,1.605,92,1.605,128,2.892,135,2.934,149,2.158,150,2.795,153,2.43,158,2.795,159,2.795,160,2.795,161,2.795,166,2.158,187,2.601,194,1.941,195,2.43,199,3.674,204,2.43,219,4.224,236,2.158,360,2.795,361,4.487,362,4.487,363,3.348,364,4.487,365,3.348,366,3.348,367,3.348,368,3.348,369,2.795,370,3.348,371,3.348,372,3.348,373,3.348,374,3.348,375,3.348,376,3.348,377,3.348,378,2.795,379,3.348]],["title/classes/LoginDto.html",[21,0.016,71,1.857]],["body/classes/LoginDto.html",[3,0.431,4,0.378,5,0.378,7,0.604,10,2.004,11,0.031,12,1.115,15,2.129,16,0.486,20,0.431,21,0.025,26,0.025,27,0.025,71,2.883,76,1.115,130,2.183,236,3.521,270,3.965,289,1.721,306,2.883,311,2.061,356,3.965,380,3.273,381,3.273,382,3.921,383,3.273,384,3.921,385,4.152,386,3.273,387,3.273,388,3.273,389,3.273]],["title/controllers/OrderController.html",[0,1.29,390,2.065]],["body/controllers/OrderController.html",[0,1.162,2,1.162,3,0.317,4,0.278,5,0.278,7,0.444,8,1.382,10,1.886,11,0.032,12,1.05,14,1.597,15,1.735,16,0.629,17,0.592,20,0.317,21,0.014,22,1.516,23,2.094,24,1.735,26,0.02,27,0.02,62,2.094,64,2.381,74,1.632,75,1.382,76,0.909,77,1.632,79,2.244,81,4.026,92,1.942,95,2.094,97,2.094,98,2.941,99,2.094,104,1.516,112,3.399,113,3.018,122,1.516,124,2.408,125,2.408,288,2.915,390,2.611,391,2.408,392,2.408,393,4.239,394,3.382,395,4.051,396,2.408,397,2.885,398,2.408,399,2.885,400,2.885,401,2.885,402,2.408,403,2.885,404,2.408,405,1.86,406,2.408,407,2.461,408,2.408,409,2.885,410,2.885,411,2.885,412,2.408,413,2.885,414,2.408,415,2.885,416,2.408,417,2.885]],["title/modules/OrderModule.html",[28,1.092,41,1.857]],["body/modules/OrderModule.html",[2,1.913,3,0.401,4,0.351,5,0.351,11,0.032,16,0.693,17,0.748,20,0.401,21,0.018,26,0.023,27,0.023,28,1.8,30,1.6,31,1.6,32,1.917,33,1.917,34,1.6,35,2.775,36,1.917,41,3.557,42,2.608,44,2.495,45,1.917,46,1.748,48,3.06,190,2.647,390,3.403,407,3.124,408,3.044,418,3.044,419,3.647,420,3.044,421,3.647,422,3.647]],["title/injectables/OrderService.html",[54,0.783,407,1.684]],["body/injectables/OrderService.html",[3,0.289,4,0.254,5,0.254,7,0.406,8,1.295,11,0.032,12,1.093,14,1.519,16,0.604,17,0.541,20,0.289,21,0.013,24,0.976,26,0.019,27,0.019,54,0.928,55,1.156,64,2.235,74,1.794,75,1.519,76,0.999,77,1.794,78,1.698,79,2.134,84,3.717,92,1.82,108,2.134,122,2.715,131,2.757,135,2.201,154,2.199,170,1.698,171,1.527,212,2.362,215,1.912,222,1.996,230,1.912,256,1.912,288,2.829,292,1.912,293,2.757,294,2.757,295,2.757,392,2.199,393,3.717,394,3.17,398,3.17,405,1.698,406,2.199,407,1.996,416,2.199,423,2.199,424,3.798,425,2.634,426,2.634,427,2.634,428,2.634,429,2.634,430,2.634,431,2.199,432,2.634,433,2.199,434,2.199,435,2.634,436,3.798,437,2.634,438,2.634,439,2.634,440,2.634,441,2.199,442,2.634,443,2.634,444,2.634,445,2.634,446,1.996,447,2.634,448,3.798,449,2.634,450,2.634]],["title/modules/PrismaModule.html",[28,1.092,42,1.406]],["body/modules/PrismaModule.html",[3,0.424,4,0.372,5,0.372,11,0.031,16,0.61,17,0.791,20,0.424,21,0.019,26,0.024,27,0.024,28,1.849,30,1.692,31,1.692,32,2.027,33,2.027,34,1.692,35,2.849,36,2.849,42,2.691,44,2.587,45,2.027,46,1.848,212,2.806,451,3.219,452,3.219,453,3.219,454,3.856,455,3.856]],["title/injectables/PrismaService.html",[54,0.783,212,1.406]],["body/injectables/PrismaService.html",[3,0.394,4,0.346,5,0.346,7,0.553,8,1.603,11,0.032,12,1.054,14,1.603,16,0.582,17,0.737,20,0.394,21,0.018,26,0.023,27,0.023,54,1.149,55,1.576,64,2.429,74,1.447,75,1.225,76,0.805,77,1.447,108,2.253,128,3.03,212,2.063,355,2.315,456,2.998,457,5.24,458,4.7,459,5.919,460,4.7,461,5.558,462,3.591,463,3.591,464,3.591,465,3.591,466,3.591,467,3.591,468,3.591]],["title/classes/Product.html",[21,0.016,446,1.684]],["body/classes/Product.html",[3,0.528,4,0.463,5,0.463,11,0.029,20,0.528,21,0.024,26,0.028,27,0.028,289,2.108,446,2.959,469,4.009]],["title/controllers/ProductController.html",[0,1.29,470,2.065]],["body/controllers/ProductController.html",[0,0.845,2,0.845,3,0.231,4,0.202,5,0.512,7,0.323,8,1.094,10,1.892,11,0.032,12,1.053,14,1.602,15,2.017,16,0.614,17,0.431,20,0.231,21,0.01,22,1.103,23,1.523,24,1.74,26,0.016,27,0.016,62,1.523,64,2.383,74,1.756,75,1.487,76,0.977,77,1.756,79,2.251,81,4.033,92,2.373,95,2.826,96,1.523,97,1.523,98,2.328,99,1.523,104,1.103,108,2.251,112,3.164,113,2.509,114,1.103,329,2.708,396,1.752,402,1.752,404,1.752,405,1.353,412,2.677,414,1.752,446,1.103,470,2.067,471,1.752,472,2.826,473,3.639,474,2.677,475,2.677,476,3.25,477,2.099,478,4.133,479,2.099,480,2.099,481,2.099,482,1.752,483,2.099,484,1.752,485,2.099,486,2.099,487,1.752,488,3.08,489,2.099,490,2.099,491,1.752,492,2.099,493,2.099,494,2.099,495,2.099,496,3.893,497,2.046,498,1.752,499,2.328,500,1.752,501,2.099,502,1.752,503,1.752,504,2.099,505,2.099,506,2.099,507,3.207,508,2.099,509,2.099,510,2.099,511,2.099,512,2.099,513,2.099,514,2.099,515,2.099,516,2.099,517,2.099]],["title/modules/ProductModule.html",[28,1.092,43,1.857]],["body/modules/ProductModule.html",[2,1.913,3,0.401,4,0.351,5,0.351,11,0.032,16,0.693,17,0.748,20,0.401,21,0.018,26,0.023,27,0.023,28,1.8,30,1.6,31,1.6,32,1.917,33,1.917,34,1.6,35,2.775,36,1.917,42,2.608,43,3.557,44,2.495,45,1.917,46,1.748,48,3.06,190,2.647,470,3.403,497,3.124,498,3.044,518,3.044,519,3.044,520,3.647,521,3.647,522,3.647]],["title/injectables/ProductService.html",[54,0.783,497,1.684]],["body/injectables/ProductService.html",[3,0.161,4,0.141,5,0.466,7,0.225,8,0.821,11,0.032,12,0.948,14,1.34,15,0.891,16,0.44,17,0.3,20,0.161,21,0.007,22,0.768,24,1.456,26,0.012,27,0.012,54,0.588,55,0.641,64,2.203,74,1.583,75,1.34,76,1.002,77,1.583,78,2.881,79,1.884,92,2.499,96,1.061,108,2.499,122,2.942,135,0.847,170,2.881,171,2.59,211,1.22,212,1.56,215,1.747,222,2.543,228,2.009,229,1.22,230,1.061,249,3.28,251,2.533,252,1.22,253,2.967,256,2.226,257,1.22,269,3.28,285,1.22,329,2.222,334,2.56,405,0.942,431,1.22,433,1.22,446,2.066,472,1.747,473,2.967,474,2.009,475,2.009,476,2.009,478,3.529,482,2.009,484,2.009,487,2.009,488,2.706,491,1.22,497,1.265,499,1.747,500,1.22,523,1.22,524,1.462,525,2.406,526,1.462,527,1.462,528,1.462,529,1.462,530,1.462,531,4.469,532,3.067,533,2.406,534,2.406,535,2.406,536,2.406,537,2.406,538,2.406,539,2.406,540,3.555,541,2.406,542,3.555,543,1.462,544,2.406,545,2.406,546,2.406,547,2.406,548,2.406,549,2.406,550,2.406,551,2.406,552,2.406,553,2.406,554,1.462,555,2.406,556,1.462,557,1.462,558,2.406,559,1.462,560,1.462,561,2.406,562,2.406,563,1.462,564,1.462,565,2.406,566,1.462,567,2.406,568,1.462,569,1.462,570,1.462,571,1.462,572,1.462,573,1.462,574,1.462,575,1.462,576,2.406,577,2.406,578,1.462,579,1.462,580,1.462,581,1.462,582,1.462,583,2.406,584,1.462]],["title/classes/RegisterDto.html",[21,0.016,86,1.857]],["body/classes/RegisterDto.html",[3,0.34,4,0.298,5,0.298,7,0.477,10,2.21,11,0.032,12,1.23,15,2.191,16,0.527,20,0.34,21,0.021,26,0.021,27,0.021,75,1.657,76,1.23,86,2.465,113,2.742,114,1.626,130,1.866,166,3.813,236,3.133,251,2.742,270,3.528,276,4.057,289,1.358,306,3.034,308,3.133,310,1.994,311,1.626,339,3.55,344,2.583,355,1.994,356,3.799,358,2.583,381,2.583,383,2.583,385,3.55,386,2.583,387,2.583,388,2.583,389,2.583,585,2.583,586,3.094,587,3.094,588,3.094,589,3.094,590,3.094,591,4.253,592,4.253,593,3.094,594,3.094]],["title/classes/UpdateProductDto.html",[21,0.016,488,1.857]],["body/classes/UpdateProductDto.html",[3,0.485,4,0.426,5,0.426,11,0.031,16,0.664,20,0.485,21,0.022,26,0.026,27,0.026,128,3.453,289,1.939,329,2.323,331,3.208,472,3.208,488,3.105,499,3.208,595,3.689,596,5.357,597,4.419,598,3.689,599,3.689]],["title/coverage.html",[600,3.161]],["body/coverage.html",[0,2.065,1,1.901,5,0.284,6,2.461,11,0.032,18,1.55,21,0.028,26,0.02,27,0.02,34,1.294,54,1.401,56,2.461,60,1.901,61,2.461,71,1.709,76,0.661,86,1.709,100,1.55,104,1.55,127,2.461,163,5.328,171,1.709,187,1.709,194,1.709,208,2.461,212,1.294,288,1.55,290,2.651,291,2.651,296,1.901,329,1.55,330,2.461,331,2.986,360,2.461,380,2.461,390,1.901,391,2.461,407,1.55,423,2.461,446,1.55,456,2.461,469,2.461,470,1.901,471,2.461,488,1.709,497,1.55,523,2.461,585,2.461,595,2.461,600,2.14,601,2.461,602,2.949,603,2.949,604,4.113,605,4.737,606,4.737,607,4.113,608,4.737,609,2.461,610,2.949,611,5.126,612,2.461,613,2.949,614,4.113,615,2.949,616,2.949,617,2.949]],["title/dependencies.html",[31,1.689,618,2.24]],["body/dependencies.html",[11,0.032,17,0.822,21,0.025,26,0.025,27,0.025,31,1.757,149,2.581,193,2.907,199,2.907,233,3.343,311,2.105,312,2.907,355,2.581,369,4.208,434,3.343,502,3.343,503,3.343,598,3.343,599,3.343,619,5.041,620,4.004,621,4.004,622,4.004,623,4.004,624,4.004,625,4.004,626,4.004,627,4.004,628,4.004,629,4.004,630,4.004,631,4.004,632,4.004,633,4.004]],["title/miscellaneous/enumerations.html",[634,1.41,635,3.212]],["body/miscellaneous/enumerations.html",[7,0.7,11,0.031,26,0.027,27,0.027,290,2.931,291,3.513,300,3.956,317,3.956,318,3.956,319,3.956,634,2.39,635,3.796,636,4.547,637,4.872]],["title/miscellaneous/functions.html",[634,1.41,638,3.212]],["body/miscellaneous/functions.html",[7,0.747,11,0.028,26,0.028,27,0.028,34,2.632,612,4.051,634,2.551,638,4.051,639,4.853]],["title/index.html",[7,0.413,640,2.683,641,2.683]],["body/index.html",[4,0.213,11,0.03,26,0.016,27,0.016,46,2.42,333,1.602,441,4.215,600,1.602,601,2.782,642,2.207,643,2.207,644,4.015,645,3.333,646,2.207,647,2.207,648,2.207,649,2.207,650,3.333,651,4.015,652,2.207,653,2.207,654,2.207,655,4.473,656,2.207,657,4.473,658,5.397,659,2.207,660,5.242,661,2.207,662,2.207,663,2.207,664,3.333,665,2.207,666,3.333,667,2.207,668,4.015,669,2.207,670,3.333,671,2.207,672,2.207,673,2.207,674,2.207,675,2.207,676,4.473,677,5.397,678,5.049,679,2.207,680,3.333,681,2.207,682,2.207,683,2.207,684,2.207,685,2.207,686,3.333,687,4.473,688,2.207,689,3.333,690,2.207,691,2.207,692,3.333,693,5.049,694,4.473,695,2.207,696,3.333,697,2.207,698,2.207,699,2.207,700,2.207,701,4.473,702,2.207,703,2.207,704,2.207,705,2.207,706,3.333,707,2.207,708,2.207,709,2.207,710,2.207,711,2.207,712,3.333,713,2.207,714,2.207,715,2.207,716,3.333,717,2.207,718,2.207,719,3.734,720,3.333,721,2.207,722,2.207,723,2.207,724,2.207,725,2.207,726,2.207,727,2.207,728,2.207,729,3.333,730,2.207,731,2.207,732,2.207,733,2.207,734,4.015,735,2.207,736,2.207,737,2.207,738,2.207,739,2.207,740,2.207,741,3.333,742,2.207,743,2.207,744,2.207,745,2.207,746,2.207,747,3.333,748,2.207,749,2.207,750,2.207,751,3.333,752,3.333,753,2.207,754,2.207,755,2.207,756,2.207,757,2.207,758,2.207,759,2.207,760,2.207,761,2.207,762,2.207,763,2.207,764,1.842,765,2.207,766,2.207,767,2.207,768,2.207,769,2.207,770,2.207,771,1.842]],["title/modules.html",[30,1.911]],["body/modules.html",[11,0.027,26,0.027,27,0.027,29,2.862,30,1.948,40,2.574,41,2.574,42,1.948,43,2.574,719,5.131,772,6.147,773,6.147,774,6.147]],["title/overview.html",[775,3.635]],["body/overview.html",[2,1.272,11,0.031,18,2.581,26,0.021,27,0.021,28,1.077,29,3.999,30,1.385,31,1.385,32,1.659,33,1.659,34,1.385,35,1.659,36,1.659,37,2.635,38,2.635,39,2.635,40,3.494,41,3.384,42,2.645,43,3.384,44,2.266,45,1.659,46,1.513,55,1.385,100,2.581,184,2.635,186,2.635,187,2.847,212,2.562,289,1.385,407,2.581,418,2.635,420,2.635,451,2.635,452,2.635,453,2.635,497,2.581,518,2.635,519,2.635,775,2.635,776,3.157,777,3.157,778,4.312]],["title/properties.html",[130,1.689,618,2.24]],["body/properties.html",[11,0.031,26,0.028,27,0.028,130,2.097,333,3.469,764,3.989,771,3.989,779,4.779,780,4.779,781,4.779]],["title/miscellaneous/variables.html",[634,1.41,782,3.212]],["body/miscellaneous/variables.html",[7,0.707,11,0.031,26,0.027,27,0.027,76,1.03,183,3.833,194,3.178,203,3.333,378,3.833,609,3.833,634,2.413,637,3.833,782,3.833,783,4.592,784,4.592,785,4.592,786,4.592]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["0.0.1",{"_index":780,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{}}}],["10",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["10.0.0",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["10.4.15",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["1024",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{}}}],["12",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{}}}],["200",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["3600",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":777,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":776,"title":{},"body":{"overview.html":{}}}],["5.1.1",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":778,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["access",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["accesstoken",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin",{"_index":592,"title":{},"body":{"classes/RegisterDto.html":{}}}],["allorder",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["allowedmimetypes",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{}}}],["allowing",{"_index":707,"title":{},"body":{"index.html":{}}}],["allproduct",{"_index":558,"title":{},"body":{"injectables/ProductService.html":{}}}],["alluser",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["already",{"_index":240,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":757,"title":{},"body":{"index.html":{}}}],["app",{"_index":463,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.close",{"_index":468,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":678,"title":{},"body":{"index.html":{}}}],["applications",{"_index":650,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["auth",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":189,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.service",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":60,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":181,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguard",{"_index":104,"title":{"injectables/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["authguard())@delete('users/:id",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard())@get(':id",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["authguard())@get('profile",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard())@get('users",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["authguard())@patch(':id')@useinterceptors(undefined",{"_index":489,"title":{},"body":{"controllers/ProductController.html":{}}}],["authguard())@post",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{}}}],["authguard())@useguards(authguard)@delete(':id",{"_index":485,"title":{},"body":{"controllers/ProductController.html":{}}}],["authguard())@useguards(authguard)@get",{"_index":396,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["authguard())@usepipes(validationpipe)@post()@useinterceptors(undefined",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{}}}],["authguard(['admin",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["authguard(['admin','staff",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{}}}],["authguardpassport",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authguardpassport('jwt",{"_index":129,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":764,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":100,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["aws",{"_index":696,"title":{},"body":{"index.html":{}}}],["backers",{"_index":758,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["badrequestexception('file",{"_index":544,"title":{},"body":{"injectables/ProductService.html":{}}}],["badrequestexception('invalid",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{}}}],["badrequestexception(`product",{"_index":449,"title":{},"body":{"injectables/OrderService.html":{}}}],["based",{"_index":691,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":233,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["board",{"_index":750,"title":{},"body":{"index.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["boolean",{"_index":347,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":774,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":772,"title":{},"body":{"modules.html":{}}}],["building",{"_index":645,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":133,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canactivate(context",{"_index":138,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["cash",{"_index":317,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"miscellaneous/enumerations.html":{}}}],["category",{"_index":332,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["channel",{"_index":722,"title":{},"body":{"index.html":{}}}],["check",{"_index":441,"title":{},"body":{"injectables/OrderService.html":{},"index.html":{}}}],["checkpassword",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists",{"_index":234,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.email",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.id",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.name",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.password",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkuserexists.role",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{}}}],["class",{"_index":21,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":289,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/Product.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"overview.html":{}}}],["clicks",{"_index":706,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":690,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":184,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":185,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":186,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":418,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":419,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":420,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":451,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":453,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":452,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":518,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":520,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":519,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["come",{"_index":713,"title":{},"body":{"index.html":{}}}],["compare",{"_index":231,"title":{},"body":{"injectables/AuthService.html":{}}}],["compare(data.password",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.error('error",{"_index":176,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.error('info",{"_index":178,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.error('user",{"_index":177,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('forbidden",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('jwt",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["console.log('user",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log(productdata",{"_index":554,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.warn(`failed",{"_index":572,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["constructor(prisma",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["constructor(prismaservice",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["constructor(requiredroles",{"_index":136,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context",{"_index":141,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["courses",{"_index":728,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":600,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":472,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["create(createproductdto",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(file",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{}}}],["created",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["createorder",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["createorder(@body",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorder(createorderdto",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["createorderdto",{"_index":288,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderitemdto",{"_index":296,"title":{"classes/CreateOrderItemDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{}}}],["createproduct",{"_index":555,"title":{},"body":{"injectables/ProductService.html":{}}}],["createproductdto",{"_index":329,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createuser",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["credit_card",{"_index":318,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"miscellaneous/enumerations.html":{}}}],["data",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["data.email",{"_index":237,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":243,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{}}}],["date.now()}_${file.originalname",{"_index":547,"title":{},"body":{"injectables/ProductService.html":{}}}],["debit_card",{"_index":319,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"classes/RegisterDto.html":{}}}],["deeper",{"_index":724,"title":{},"body":{"index.html":{}}}],["default",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":198,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{}}}],["delete",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["delete(':id",{"_index":515,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete('users/:id",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["deleted",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["deletedat",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{}}}],["deleteproduct",{"_index":583,"title":{},"body":{"injectables/ProductService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":676,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":695,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":686,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":705,"title":{},"body":{"index.html":{}}}],["description",{"_index":333,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{},"properties.html":{}}}],["detail",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["detailprofile",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["development",{"_index":661,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":736,"title":{},"body":{"index.html":{}}}],["di",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["discord",{"_index":721,"title":{},"body":{"index.html":{}}}],["dive",{"_index":723,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":601,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["drink",{"_index":341,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["dto",{"_index":320,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["dto/create",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/logindto",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/registerdto",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["e2e",{"_index":671,"title":{},"body":{"index.html":{}}}],["each",{"_index":325,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["efficient",{"_index":646,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":684,"title":{},"body":{"index.html":{}}}],["email",{"_index":236,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["enableshutdownhooks",{"_index":458,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":460,"title":{},"body":{"injectables/PrismaService.html":{}}}],["ensure",{"_index":682,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":740,"title":{},"body":{"index.html":{}}}],["enum",{"_index":313,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["enumerations",{"_index":635,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":145,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["err.message",{"_index":574,"title":{},"body":{"injectables/ProductService.html":{}}}],["example",{"_index":657,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":139,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["existingproduct",{"_index":566,"title":{},"body":{"injectables/ProductService.html":{}}}],["existingproduct.image",{"_index":575,"title":{},"body":{"injectables/ProductService.html":{}}}],["exists",{"_index":241,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":726,"title":{},"body":{"index.html":{}}}],["expired",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":206,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["express",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["extends",{"_index":128,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{}}}],["extractjwt",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["fast",{"_index":699,"title":{},"body":{"index.html":{}}}],["features",{"_index":709,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":561,"title":{},"body":{"injectables/ProductService.html":{}}}],["few",{"_index":701,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["file.buffer",{"_index":552,"title":{},"body":{"injectables/ProductService.html":{}}}],["file.size",{"_index":569,"title":{},"body":{"injectables/ProductService.html":{}}}],["fileinterceptor",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{}}}],["filename",{"_index":546,"title":{},"body":{"injectables/ProductService.html":{}}}],["findall",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findone",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findone(@param('id",{"_index":510,"title":{},"body":{"controllers/ProductController.html":{}}}],["findone(id",{"_index":482,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductid",{"_index":562,"title":{},"body":{"injectables/ProductService.html":{}}}],["focus",{"_index":708,"title":{},"body":{"index.html":{}}}],["follow",{"_index":744,"title":{},"body":{"index.html":{}}}],["food",{"_index":340,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["forbiddenexception",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["found",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["framework",{"_index":644,"title":{},"body":{"index.html":{}}}],["fs",{"_index":549,"title":{},"body":{"injectables/ProductService.html":{}}}],["fs.unlink(existingproduct.image).catch((err",{"_index":571,"title":{},"body":{"injectables/ProductService.html":{}}}],["fs.writefile(imagepath",{"_index":551,"title":{},"body":{"injectables/ProductService.html":{}}}],["full",{"_index":739,"title":{},"body":{"index.html":{}}}],["function",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":638,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":704,"title":{},"body":{"index.html":{}}}],["generatejwt",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatejwt(payload",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':id",{"_index":414,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["get('profile",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('users",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getorderbyid",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{}}}],["getorderbyid(@param('id",{"_index":415,"title":{},"body":{"controllers/OrderController.html":{}}}],["getorderbyid(id",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{}}}],["getting",{"_index":640,"title":{"index.html":{}},"body":{}}],["graph",{"_index":731,"title":{},"body":{"index.html":{}}}],["grow",{"_index":754,"title":{},"body":{"index.html":{}}}],["handlerequest",{"_index":134,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["handlerequest(err",{"_index":143,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["hands",{"_index":725,"title":{},"body":{"index.html":{}}}],["handy",{"_index":714,"title":{},"body":{"index.html":{}}}],["hash",{"_index":232,"title":{},"body":{"injectables/AuthService.html":{}}}],["hash(data.password",{"_index":244,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":729,"title":{},"body":{"index.html":{}}}],["here",{"_index":762,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":228,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["httpexception('user",{"_index":239,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":768,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":229,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["httpstatus.found",{"_index":242,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.not_found",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["httpstatus.ok",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["httpstatus.unauthorized",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["id",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["identifier",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["if(!allowedmimetypes.includes(file.mimetype",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(!checkuserexists",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(!existingproduct",{"_index":568,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(!findproductid",{"_index":564,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(!productfind",{"_index":582,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(!user",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(allproduct",{"_index":560,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(alluser",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(checkpassword",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(checkuserexists",{"_index":238,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(createuser",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(detailprofile",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["if(existingproduct.image",{"_index":570,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(file",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(file.size",{"_index":543,"title":{},"body":{"injectables/ProductService.html":{}}}],["if(user.deletedat",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":334,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/ProductService.html":{}}}],["image/jpeg",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{}}}],["image/jpg",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{}}}],["image/png",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["imagepath",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{}}}],["implements",{"_index":465,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{}}}],["import('fs/promises",{"_index":550,"title":{},"body":{"injectables/ProductService.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":461,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{}}}],["information",{"_index":688,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":711,"title":{},"body":{"index.html":{}}}],["inject",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["inject(request",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"overview.html":{}}}],["install",{"_index":703,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":659,"title":{},"body":{"index.html":{}}}],["interact",{"_index":732,"title":{},"body":{"index.html":{}}}],["is_best_seller",{"_index":335,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isarray",{"_index":307,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["isarray()@validatenested({each",{"_index":297,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["isboolean",{"_index":348,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isemail",{"_index":385,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isenum",{"_index":310,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["isenum(category",{"_index":338,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isenum(paymentmethod",{"_index":301,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["isenum(role",{"_index":591,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isint",{"_index":303,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["isnotempty",{"_index":356,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isemail",{"_index":381,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnotempty()@isstring",{"_index":587,"title":{},"body":{"classes/RegisterDto.html":{}}}],["isnotempty()@isstring()@minlength(6)@maxlength(20",{"_index":383,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isnumber",{"_index":357,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isnumber()@min(0",{"_index":352,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isoptional",{"_index":308,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["isstring",{"_index":306,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["isstring()@isnotempty",{"_index":350,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@isoptional",{"_index":344,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["item",{"_index":445,"title":{},"body":{"injectables/OrderService.html":{}}}],["item.productid",{"_index":448,"title":{},"body":{"injectables/OrderService.html":{}}}],["job",{"_index":747,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":749,"title":{},"body":{"index.html":{}}}],["join",{"_index":760,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":199,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":196,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwt_config",{"_index":194,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt_config.expired",{"_index":207,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["jwt_config.secret",{"_index":204,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":192,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":202,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":187,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":765,"title":{},"body":{"index.html":{}}}],["kasirid",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["key",{"_index":679,"title":{},"body":{"index.html":{}}}],["large",{"_index":545,"title":{},"body":{"injectables/ProductService.html":{}}}],["learn",{"_index":717,"title":{},"body":{"index.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["license",{"_index":771,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":752,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":746,"title":{},"body":{"index.html":{}}}],["logging",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["login",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(data",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":71,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["looking",{"_index":689,"title":{},"body":{"index.html":{}}}],["loop",{"_index":742,"title":{},"body":{"index.html":{}}}],["makes",{"_index":697,"title":{},"body":{"index.html":{}}}],["managing",{"_index":710,"title":{},"body":{"index.html":{}}}],["match",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mau",{"_index":693,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":386,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxlength(20",{"_index":389,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["maxsize",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["message",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{}}}],["metadata",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["metode",{"_index":315,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["min",{"_index":358,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["min(0",{"_index":359,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["minlength",{"_index":387,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["minlength(6",{"_index":388,"title":{},"body":{"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["miscellaneous",{"_index":634,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":751,"title":{},"body":{"index.html":{}}}],["mode",{"_index":664,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":687,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":766,"title":{},"body":{"index.html":{}}}],["name",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{}}}],["need",{"_index":737,"title":{},"body":{"index.html":{}}}],["nest",{"_index":651,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":770,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":677,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":193,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":598,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["neworder",{"_index":439,"title":{},"body":{"injectables/OrderService.html":{}}}],["node.js",{"_index":643,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["notfoundexception('product",{"_index":565,"title":{},"body":{"injectables/ProductService.html":{}}}],["npm",{"_index":658,"title":{},"body":{"index.html":{}}}],["null",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":222,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["object",{"_index":183,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["offer",{"_index":748,"title":{},"body":{"index.html":{}}}],["official",{"_index":694,"title":{},"body":{"index.html":{}}}],["old",{"_index":573,"title":{},"body":{"injectables/ProductService.html":{}}}],["one",{"_index":339,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/RegisterDto.html":{}}}],["onmoduleinit",{"_index":459,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":753,"title":{},"body":{"index.html":{}}}],["optional",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["order",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.controller",{"_index":422,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":291,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["order.dto.ts:14",{"_index":326,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["order.dto.ts:17",{"_index":327,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["order.dto.ts:20",{"_index":328,"title":{},"body":{"classes/CreateOrderItemDto.html":{}}}],["order.dto.ts:27",{"_index":302,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:30",{"_index":305,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:33",{"_index":304,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:38",{"_index":299,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":390,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderid",{"_index":416,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["orderitem",{"_index":321,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["orderitems",{"_index":292,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/OrderService.html":{}}}],["orderitems.map(async",{"_index":444,"title":{},"body":{"injectables/OrderService.html":{}}}],["ordermodule",{"_index":41,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orders",{"_index":324,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["orderservice",{"_index":407,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":775,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":618,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["param('id",{"_index":513,"title":{},"body":{"controllers/ProductController.html":{}}}],["parameters",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["parseint(id",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["part",{"_index":738,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":597,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createproductdto",{"_index":596,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["passport",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":191,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":197,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":361,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{}}}],["patch",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{}}}],["patch(':id",{"_index":512,"title":{},"body":{"controllers/ProductController.html":{}}}],["payload",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.exp",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.role",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payment_method",{"_index":293,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/OrderService.html":{}}}],["paymentmethod",{"_index":300,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"miscellaneous/enumerations.html":{}}}],["pembayaran",{"_index":316,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["phone",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"classes/RegisterDto.html":{}}}],["platform",{"_index":692,"title":{},"body":{"index.html":{}}}],["please",{"_index":720,"title":{},"body":{"index.html":{}}}],["possible",{"_index":685,"title":{},"body":{"index.html":{}}}],["post",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["post('login",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('register",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["price",{"_index":336,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["prisma",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["prisma.orders.create",{"_index":440,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.products.findunique",{"_index":447,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.service",{"_index":455,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":355,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/PrismaService.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":457,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":42,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":212,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":131,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{}}}],["process.on('beforeexit",{"_index":467,"title":{},"body":{"injectables/PrismaService.html":{}}}],["product",{"_index":446,"title":{"classes/Product.html":{}},"body":{"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":522,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":331,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:11",{"_index":345,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:15",{"_index":353,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:19",{"_index":354,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:22",{"_index":343,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:26",{"_index":346,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:29",{"_index":349,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:7",{"_index":351,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product.stock",{"_index":450,"title":{},"body":{"injectables/OrderService.html":{}}}],["product/product.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":470,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdata",{"_index":553,"title":{},"body":{"injectables/ProductService.html":{}}}],["productfind",{"_index":581,"title":{},"body":{"injectables/ProductService.html":{}}}],["productid",{"_index":322,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["production",{"_index":666,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":43,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productservice",{"_index":497,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["profile(@req",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(req",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user_id",{"_index":221,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":642,"title":{},"body":{"index.html":{}}}],["project",{"_index":655,"title":{},"body":{"index.html":{}}}],["promise",{"_index":142,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["promise.all",{"_index":443,"title":{},"body":{"injectables/OrderService.html":{}}}],["properties",{"_index":130,"title":{"properties.html":{}},"body":{"injectables/AuthGuard.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"properties.html":{}}}],["property",{"_index":200,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["public/uploads/products/${filename",{"_index":548,"title":{},"body":{"injectables/ProductService.html":{}}}],["quantity",{"_index":323,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["questions",{"_index":718,"title":{},"body":{"index.html":{}}}],["read",{"_index":761,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["ready",{"_index":675,"title":{},"body":{"index.html":{}}}],["real",{"_index":733,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registerdto",{"_index":86,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RegisterDto.html":{},"coverage.html":{}}}],["remove",{"_index":475,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["remove(@param('id",{"_index":516,"title":{},"body":{"controllers/ProductController.html":{}}}],["remove(id",{"_index":484,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["repository",{"_index":654,"title":{},"body":{"index.html":{}}}],["req",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/OrderService.html":{}}}],["request",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/OrderService.html":{}}}],["request.user",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["required",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiredroles",{"_index":132,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["requiring",{"_index":700,"title":{},"body":{"index.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["resource",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["resources",{"_index":712,"title":{},"body":{"index.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["role",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterDto.html":{}}}],["roles",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":660,"title":{},"body":{"index.html":{}}}],["runs",{"_index":683,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":647,"title":{},"body":{"index.html":{}}}],["school",{"_index":579,"title":{},"body":{"injectables/ProductService.html":{}}}],["secret",{"_index":203,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["secret123",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["server",{"_index":648,"title":{},"body":{"index.html":{}}}],["session",{"_index":201,"title":{},"body":{"modules/AuthModule.html":{}}}],["set",{"_index":182,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["setup",{"_index":656,"title":{},"body":{"index.html":{}}}],["side",{"_index":649,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":205,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":702,"title":{},"body":{"index.html":{}}}],["sini",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["snack",{"_index":342,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["softdeleteuser",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["softdeleteuser(@param('id",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["softdeleteuser(id",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["softdeleteuser(userid",{"_index":226,"title":{},"body":{"injectables/AuthService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"classes/UpdateProductDto.html":{},"index.html":{}}}],["sponsors",{"_index":756,"title":{},"body":{"index.html":{}}}],["src/.../create",{"_index":636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../jwt_config.ts",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:12",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:23",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["src/auth/auth.guard.ts",{"_index":127,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/auth/auth.guard.ts:11",{"_index":137,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:18",{"_index":140,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:39",{"_index":144,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":188,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:118",{"_index":227,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:13",{"_index":225,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:38",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:45",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:74",{"_index":223,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:96",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/logindto.ts",{"_index":380,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/logindto.ts:12",{"_index":384,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/logindto.ts:6",{"_index":382,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/registerdto.ts",{"_index":585,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/auth/dto/registerdto.ts:11",{"_index":586,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:15",{"_index":590,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:21",{"_index":589,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:25",{"_index":594,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/dto/registerdto.ts:7",{"_index":588,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":360,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config",{"_index":195,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/config/jwt_config.ts",{"_index":609,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":612,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":290,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/order/order.controller.ts",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:12",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:19",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:25",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":421,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:13",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:65",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:7",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:89",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":190,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":454,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":230,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":462,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":464,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":330,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":595,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts",{"_index":469,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":471,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:16",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:26",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:32",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:39",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:50",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":521,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:13",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:136",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:62",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:7",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:80",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["staff",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"classes/RegisterDto.html":{}}}],["start",{"_index":662,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":665,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":667,"title":{},"body":{"index.html":{}}}],["started",{"_index":641,"title":{"index.html":{}},"body":{}}],["starter",{"_index":653,"title":{},"body":{"index.html":{}}}],["statements",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["statuscode",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["stay",{"_index":741,"title":{},"body":{"index.html":{}}}],["steps",{"_index":680,"title":{},"body":{"index.html":{}}}],["stock",{"_index":337,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["straightforward",{"_index":698,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{}}}],["sub",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["succesfully",{"_index":557,"title":{},"body":{"injectables/ProductService.html":{}}}],["successfully",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{}}}],["super",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["super.canactivate(context",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["support",{"_index":719,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":773,"title":{},"body":{"modules.html":{}}}],["table",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":681,"title":{},"body":{"index.html":{}}}],["tambahkan",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["test",{"_index":670,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":673,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":672,"title":{},"body":{"index.html":{}}}],["tests",{"_index":668,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":755,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":466,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.alluser",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.login(data",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req.user.id",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.softdeleteuser(userid",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.generatejwt",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(payload",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.allorder",{"_index":413,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.createorder(createorderdto",{"_index":411,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.vieworderdetail(orderid",{"_index":417,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.products.create",{"_index":556,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.products.delete",{"_index":584,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.products.findfirst",{"_index":563,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.products.findmany",{"_index":559,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.products.findunique",{"_index":567,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.products.update",{"_index":578,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.users.create",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findfirst",{"_index":235,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findmany",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.findunique",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.users.update",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prismaservice.$transaction(async",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.productservice.create(createproductdto",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(+id",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(+id",{"_index":517,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(+id",{"_index":514,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.req.user.id",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.requiredroles",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.requiredroles.join",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.requiredroles.length",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.requiredroles.some(role",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["time",{"_index":734,"title":{},"body":{"index.html":{}}}],["token",{"_index":180,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["total_item",{"_index":294,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/OrderService.html":{}}}],["total_price",{"_index":295,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"injectables/OrderService.html":{}}}],["touch",{"_index":763,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":312,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"dependencies.html":{}}}],["true",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["true})@type(undefined",{"_index":298,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["twitter",{"_index":769,"title":{},"body":{"index.html":{}}}],["type",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RegisterDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":599,"title":{},"body":{"classes/UpdateProductDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":652,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":146,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":179,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["undefined",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["unit",{"_index":669,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["unlicensed",{"_index":781,"title":{},"body":{"properties.html":{}}}],["untuk",{"_index":314,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["update",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["update(id",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["updated",{"_index":580,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateddata",{"_index":576,"title":{},"body":{"injectables/ProductService.html":{}}}],["updatedorderitems",{"_index":442,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateproduct",{"_index":577,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateproductdto",{"_index":488,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updates",{"_index":743,"title":{},"body":{"index.html":{}}}],["uploadedfile",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{}}}],["useguards",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["useguards(authguard",{"_index":412,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["useguards(new",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["useinterceptors",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{}}}],["useinterceptors(fileinterceptor('image",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{}}}],["usepipes",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["usepipes(validationpipe",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{}}}],["user",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/ProductController.html":{},"classes/RegisterDto.html":{}}}],["user'})@isoptional",{"_index":593,"title":{},"body":{"classes/RegisterDto.html":{}}}],["user.role",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["user_id",{"_index":224,"title":{},"body":{"injectables/AuthService.html":{}}}],["userid",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["using",{"_index":735,"title":{},"body":{"index.html":{}}}],["validate",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":309,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{}}}],["validationpipe",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{}}}],["validator",{"_index":311,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderItemDto.html":{},"classes/CreateProductDto.html":{},"classes/LoginDto.html":{},"classes/RegisterDto.html":{},"dependencies.html":{}}}],["value",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":782,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":779,"title":{},"body":{"properties.html":{}}}],["video",{"_index":727,"title":{},"body":{"index.html":{}}}],["vieworderdetail",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{}}}],["vieworderdetail(orderid",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{}}}],["visit",{"_index":716,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":730,"title":{},"body":{"index.html":{}}}],["watch",{"_index":663,"title":{},"body":{"index.html":{}}}],["website",{"_index":767,"title":{},"body":{"index.html":{}}}],["working",{"_index":715,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":745,"title":{},"body":{"index.html":{}}}],["yes",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["you'd",{"_index":759,"title":{},"body":{"index.html":{}}}],["you're",{"_index":674,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ProductModule } from './product/product.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { AuthModule } from './auth/auth.module';\nimport { OrderModule } from './order/order.module';\n\n@Module({\n  imports: [ProductModule, PrismaModule, AuthModule, OrderModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    Async\n                                profile\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                            \n                                    \n                                    \n                                    Async\n                                softDeleteUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Get('profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        softDeleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    softDeleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Delete('users/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        users\n                        \n                    \n                \n            \n            \n                \n                        \n                    users()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Get('users')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, Req, UseGuards } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { LoginDto } from './dto/LoginDto';\nimport { AuthGuard } from './auth.guard';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService){}\n\n    @Post('register')\n    async register(@Body() data: RegisterDto){\n        return await this.authService.register(data);\n    }\n\n    @Post('login')\n    async login(@Body() data: LoginDto){\n        return await this.authService.login(data);\n    }\n\n    @UseGuards(new AuthGuard(['ADMIN', 'STAFF', 'USER']))\n    @Get('profile')\n    async profile(@Req() req) {\n        return await this.authService.profile(req.user.id);\n    }\n\n\n    @UseGuards(new AuthGuard(['ADMIN']))\n    @Get('users')\n    async users(){\n        return await this.authService.allUser()\n    }\n\n    @UseGuards(new AuthGuard(['ADMIN']))\n    @Delete('users/:id')\n    async softDeleteUser(@Param('id') id: string){\n        const userId = parseInt(id, 10)\n        return await this.authService.softDeleteUser(userId)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthGuardPassport('jwt')\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                requiredRoles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(requiredRoles: string[])\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requiredRoles\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.guard.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        requiredRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.guard.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n  ForbiddenException,\n} from '@nestjs/common';\nimport { AuthGuard as AuthGuardPassport } from '@nestjs/passport';\n\n@Injectable()\nexport class AuthGuard extends AuthGuardPassport('jwt') {\n  private requiredRoles: string[];\n\n  constructor(requiredRoles: string[] = []) {\n    super();\n    this.requiredRoles = requiredRoles;\n  }\n\n  async canActivate(context: ExecutionContext): Promise {\n    const canActivate = await super.canActivate(context);\n    if (!canActivate) {\n      return false;\n    }\n\n    const request = context.switchToHttp().getRequest();\n    const user = request.user;\n\n    // console.log('User in canActivate:', user); // Tambahkan logging di sini\n\n    if (this.requiredRoles.length > 0 && (!user || !this.requiredRoles.some(role => user.role === role))) {\n      // console.log('Forbidden: User does not have required roles'); // Tambahkan logging di sini\n      throw new ForbiddenException(\n        `You do not have access to this resource. Required roles: ${this.requiredRoles.join(', ')}`\n      );\n    }\n\n    return true;\n  }\n\n  handleRequest(err: any, user: any, info: any, context: ExecutionContext) {\n    if (err || !user) {\n      // console.error('Error:', err);\n      // console.error('User:', user);\n      // console.error('Info:', info);\n      throw err || new UnauthorizedException('Invalid token or user not authenticated');\n    }\n\n    const request = context.switchToHttp().getRequest();\n    request.user = user; // Set user on request object\n\n    // console.log('User in handleRequest:', user); // Tambahkan logging di sini\n\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({\n      defaultStrategy: 'jwt',\n      property: 'user',\n      session: false\n    }),\n    JwtModule.register({\n      secret: jwt_config.secret,\n      signOptions: {\n        expiresIn: jwt_config.expired\n      }\n    })\n  ],\n  providers: [AuthService, JwtStrategy],\n  controllers: [AuthController]\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                allUser\n                            \n                            \n                                generateJWT\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                profile\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                softDeleteUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        allUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    allUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateJWT\n                        \n                    \n                \n            \n            \n                \ngenerateJWT(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(data: LoginDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            LoginDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        profile\n                        \n                    \n                \n            \n            \n                \n                        \n                    profile(user_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        softDeleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    softDeleteUser(userId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { RegisterDto } from './dto/RegisterDto';\nimport { compare, hash } from 'bcrypt';\nimport { LoginDto } from './dto/LoginDto';\nimport { jwt_config } from 'src/config/jwt_config';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n    constructor(private prisma: PrismaService, private jwtService: JwtService) {}\n\n    async register(data: RegisterDto){\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        })\n\n        if(checkUserExists){\n            throw new HttpException('user already exists', HttpStatus.FOUND)\n        }\n\n        data.password = await hash(data.password, 12)\n        const createUser = await this.prisma.users.create({\n            data: data\n        })\n\n        if(createUser){\n            return {\n                statusCode: HttpStatus.OK,\n                message: 'User Created Successfully'\n            }\n        }\n\n    }\n\n    generateJWT(payload: any){\n        return this.jwtService.sign(payload, {\n            secret: jwt_config.secret,\n            expiresIn: jwt_config.expired\n        })\n    }\n\n    async login(data: LoginDto){\n        const checkUserExists = await this.prisma.users.findFirst({\n            where: {\n                email: data.email\n            }\n        })\n\n        if(!checkUserExists){\n            throw new HttpException('User not found', HttpStatus.NOT_FOUND)\n        }\n\n        const checkPassword = await compare(data.password, checkUserExists.password)\n        if(checkPassword){\n            const accessToken = this.generateJWT({\n                sub: checkUserExists.id,\n                name: checkUserExists.name,\n                email: checkUserExists.email,\n                role: checkUserExists.role\n            })\n            return{\n                statusCode: 200,\n                message: 'Login Successfully',\n                accessToken: accessToken\n            }\n        }else{\n            throw new HttpException('user or password not match', HttpStatus.UNAUTHORIZED)\n        }\n    }\n\n    async profile(user_id: number){\n        const detailProfile = await this.prisma.users.findUnique({\n            where: {\n                id: user_id\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                phone: true,\n                role: true\n            }\n        })\n        if(detailProfile){\n            return {\n                statusCode: 200,\n                message: 'Detail Profile',\n                data: detailProfile\n            }\n        }\n    }\n\n    async allUser(){\n        const allUser = await this.prisma.users.findMany({\n            where: {\n                deletedAt: null\n            },\n            select: {\n                id: true,\n                name: true,\n                email: true,\n                phone: true,\n                role: true\n            }\n        })\n        if(allUser){\n            return {\n                statusCode: 200,\n                message: 'All User',\n                data: allUser\n            }\n        }\n    }\n\n    async softDeleteUser(userId: number){\n        const user = await this.prisma.users.findUnique({\n            where: {id: userId}\n        })\n\n        if(!user){\n            throw new HttpException('User not found', HttpStatus.NOT_FOUND)\n        }\n\n        if(user.deletedAt){\n            throw new HttpException('User already deleted', HttpStatus.NOT_FOUND)\n        }\n\n        await this.prisma.users.update({\n            where: {id: userId},\n            data: {deletedAt: new Date()}\n        })\n\n        return {\n            statusCode: 200,\n            message: 'User deleted successfully'\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                orderItems\n                            \n                            \n                                    \n                                payment_method\n                            \n                            \n                                    \n                                total_item\n                            \n                            \n                                    \n                                total_price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        orderItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateOrderItemDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(PaymentMethod)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total_item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, IsArray, IsOptional, ValidateNested, IsEnum } from 'class-validator';\nimport { Type } from 'class-transformer';\n\n// Enum untuk metode pembayaran\nenum PaymentMethod {\n  CASH = 'CASH',\n  CREDIT_CARD = 'CREDIT_CARD',\n  DEBIT_CARD = 'DEBIT_CARD',\n}\n\n// DTO untuk `orderItem`\nclass CreateOrderItemDto {\n  @IsInt()\n  productId: number;\n\n  @IsInt()\n  quantity: number;\n\n  @IsInt()\n  total_price: number;\n}\n\n// DTO untuk `orders`\nexport class CreateOrderDto {\n\n  @IsEnum(PaymentMethod)\n  payment_method: PaymentMethod;\n\n  @IsInt()\n  total_price: number;\n\n  @IsInt()\n  total_item: number;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderItemDto)\n  orderItems: CreateOrderItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderItemDto.html":{"url":"classes/CreateOrderItemDto.html","title":"class - CreateOrderItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                productId\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                total_price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        total_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsString, IsArray, IsOptional, ValidateNested, IsEnum } from 'class-validator';\nimport { Type } from 'class-transformer';\n\n// Enum untuk metode pembayaran\nenum PaymentMethod {\n  CASH = 'CASH',\n  CREDIT_CARD = 'CREDIT_CARD',\n  DEBIT_CARD = 'DEBIT_CARD',\n}\n\n// DTO untuk `orderItem`\nclass CreateOrderItemDto {\n  @IsInt()\n  productId: number;\n\n  @IsInt()\n  quantity: number;\n\n  @IsInt()\n  total_price: number;\n}\n\n// DTO untuk `orders`\nexport class CreateOrderDto {\n\n  @IsEnum(PaymentMethod)\n  payment_method: PaymentMethod;\n\n  @IsInt()\n  total_price: number;\n\n  @IsInt()\n  total_item: number;\n\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderItemDto)\n  orderItems: CreateOrderItemDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                image\n                            \n                            \n                                    \n                                is_best_seller\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Category, {message: 'category must be one of FOOD, DRINK, or SNACK'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_best_seller\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Category } from \"@prisma/client\";\nimport { IsBoolean, IsEnum, IsNotEmpty, IsNumber, IsOptional, IsString, Min } from \"class-validator\";\n\nexport class CreateProductDto {\n    @IsString()\n    @IsNotEmpty()\n    name: string;\n\n    @IsString()\n    @IsOptional()\n    description: string;\n\n    @IsNumber()\n    @Min(0)\n    price: number;\n\n    @IsNumber()\n    @Min(0)\n    stock: number;\n\n    @IsEnum(Category, { message: \"category must be one of FOOD, DRINK, or SNACK\" })\n    category: Category;\n\n    @IsString()\n    @IsOptional()\n    image: string;\n\n    @IsBoolean()\n    is_best_seller: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy, 'jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt.strategy.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { jwt_config } from \"src/config/jwt_config\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt'){\n    constructor(){\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: jwt_config.secret\n        })\n    }\n\n    async validate(payload: any){\n        // console.log('JWT Payload:', payload); // Tambahkan logging di sini\n        return {\n            id: payload.sub,\n            email: payload.email,\n            role: payload.role,\n            expired: payload.exp\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/LoginDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/LoginDto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MaxLength, MinLength } from \"class-validator\";\n\nexport class LoginDto {\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                allOrder\n                            \n                            \n                                    \n                                    \n                                    Async\n                                createOrder\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getOrderById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        allOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    allOrder()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getOrderById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getOrderById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post, UseGuards } from '@nestjs/common';\nimport { AuthGuard } from 'src/auth/auth.guard';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderService } from './order.service';\n\n@Controller('order')\nexport class OrderController {\n    constructor(private readonly orderService: OrderService){}\n\n    @UseGuards(new AuthGuard(['ADMIN', 'STAFF']))\n    @Post()\n    async createOrder(@Body() createOrderDto: CreateOrderDto){\n        return this.orderService.createOrder(createOrderDto);\n    }\n\n    @UseGuards(new AuthGuard(['ADMIN', 'STAFF']))\n    @UseGuards(AuthGuard)\n    @Get()\n    async allOrder(){\n        return this.orderService.allOrder();\n    }\n\n    @UseGuards(new AuthGuard(['ADMIN', 'STAFF']))\n    @Get(':id')\n    async getOrderById(@Param('id') id: string){\n        const orderId = parseInt(id, 10)\n        return this.orderService.viewOrderDetail(orderId);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_imports\n\n\n\ncluster_OrderModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  providers: [OrderService],\n  controllers: [OrderController]\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                allOrder\n                            \n                            \n                                    Async\n                                createOrder\n                            \n                            \n                                    Async\n                                viewOrderDetail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prismaService: PrismaService, req: any)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prismaService\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        allOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    allOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createOrder(createOrderDto: CreateOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        viewOrderDetail\n                        \n                    \n                \n            \n            \n                \n                        \n                    viewOrderDetail(orderId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Inject, Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { REQUEST } from '@nestjs/core';\n\n@Injectable()\nexport class OrderService {\n    constructor(\n        private prismaService: PrismaService,\n        @Inject(REQUEST) private req: any,    \n    ){}\n\n    async createOrder(createOrderDto: CreateOrderDto){\n        const { payment_method, total_price, total_item, orderItems } = createOrderDto;\n        const kasirId = this.req.user.id;\n\n        return this.prismaService.$transaction(async (prisma) => {\n            const newOrder = await prisma.orders.create({\n                data: {\n                    kasirId,\n                    payment_method,\n                    total_price,\n                    total_item\n                },\n            });\n\n            // check order\n            const updatedOrderItems = await Promise.all(\n                orderItems.map(async (item) => {\n                    const product = await prisma.products.findUnique({\n                        where: { id: item.productId}\n                    });\n\n                    if (!product) {\n                        throw new BadRequestException(`Product with ID ${item.productId} not found.`);\n                    }\n            \n                    if (product.stock \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService]\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                        \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                app\n                                            \n                                                        INestApplication\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/prisma/prisma.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n    async onModuleInit() {\n        await this.$connect();\n    }\n\n    async enableShutdownHooks(app: INestApplication){\n        process.on('beforeExit', async() => {\n            await app.close();\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(file: Express.Multer.File, createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@UsePipes(ValidationPipe)@Post()@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@UseGuards(AuthGuard)@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@UseGuards(AuthGuard)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto, file?: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(new AuthGuard())@Patch(':id')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UsePipes, ValidationPipe, UseInterceptors, UploadedFile, UseGuards } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { AuthGuard } from 'src/auth/auth.guard';\n\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @UseGuards(new AuthGuard(['ADMIN','STAFF']))\n  @UsePipes(ValidationPipe)\n  @Post()\n  @UseInterceptors(FileInterceptor('image'))\n  async create(\n    @UploadedFile() file: Express.Multer.File,\n    @Body() createProductDto: CreateProductDto\n  ) {\n    return await this.productService.create(createProductDto, file);\n  }\n\n  @UseGuards(new AuthGuard(['ADMIN', 'STAFF', 'USER']))\n  @UseGuards(AuthGuard)\n  @Get()\n  async findAll() {\n    return await this.productService.findAll();\n  }\n\n  @UseGuards(new AuthGuard(['ADMIN', 'STAFF']))\n  @Get(':id')\n  async findOne(@Param('id') id: string) {\n    return await this.productService.findOne(+id);\n  }\n\n  @UseGuards(new AuthGuard(['ADMIN', 'STAFF']))\n  @Patch(':id')\n  @UseInterceptors(FileInterceptor('image'))\n  async update(\n    @Param('id') id: string, \n    @Body() updateProductDto: UpdateProductDto,\n    @UploadedFile() file?: Express.Multer.File\n  ) {\n    return await this.productService.update(+id, updateProductDto, file);\n  }\n\n  @UseGuards(new AuthGuard(['ADMIN']))\n  @UseGuards(AuthGuard)\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.productService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto, file: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: number, updateProductDto: UpdateProductDto, file?: Express.Multer.File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                file\n                                            \n                                                        Express.Multer.File\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class ProductService {\n  constructor(private prisma: PrismaService){}\n\n  /*\n\n  */\n  async create(createProductDto: CreateProductDto, file: Express.Multer.File) {\n    let imagePath: string | undefined = undefined;\n\n    if(file){\n      const allowedMimeTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      if(!allowedMimeTypes.includes(file.mimetype)){\n        throw new BadRequestException('invalid file type')\n      }\n\n      const maxSize = 1 * 1024 * 1024;\n      if(file.size > maxSize){\n        throw new BadRequestException('File is too large')\n      }\n\n      const filename = `${Date.now()}_${file.originalname}`;\n      imagePath = `public/uploads/products/${filename}`\n\n      const fs = await import('fs/promises')\n      await fs.writeFile(imagePath, file.buffer)\n    }\n\n    const productData = {\n      ...createProductDto,\n      image: imagePath\n    }\n    // console.log(productData)\n\n    const createProduct = await this.prisma.products.create({\n      data: productData\n    })\n      return {\n        statusCode: 200,\n        message: 'Product Created Succesfully',\n        data: createProduct\n      }\n    \n  }\n\n  async findAll() {\n    const allProduct = await this.prisma.products.findMany()\n    if(allProduct){\n      return {\n        statusCode: 200,\n        message: 'Product Fetched Successfully',\n        data: allProduct\n      }\n    }\n  }\n\n  async findOne(id: number) {\n    const findProductId = await this.prisma.products.findFirst({\n      where: {\n        id: id\n      }\n    })\n\n    if(!findProductId){\n      throw new NotFoundException('Product Not found')\n    }\n\n    return {\n      statusCode: 200,\n      message: 'Product Fetched Successfully',\n      data: findProductId\n    }\n  }\n\n  async update(id: number, updateProductDto: UpdateProductDto, file?: Express.Multer.File) {\n    let imagePath : string | undefined;\n\n    const existingProduct = await this.prisma.products.findUnique({\n      where: {id}\n    });\n\n    if(!existingProduct){\n      throw new NotFoundException('Product not found')\n    }\n\n    if(file){\n      const allowedMimeTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n      if(!allowedMimeTypes.includes(file.mimetype)){\n        throw new BadRequestException('invalid file type')\n      }\n\n      const maxSize = 1 * 1024 * 1024;\n      if (file.size > maxSize){\n        throw new BadRequestException('file is to large')\n      }\n\n      const filename = `${Date.now()}_${file.originalname}`;\n      imagePath =  `public/uploads/products/${filename}`\n\n      const fs = await import('fs/promises')\n      await fs.writeFile(imagePath, file.buffer);\n\n      if(existingProduct.image){\n        await fs.unlink(existingProduct.image).catch((err) => {\n          console.warn(`failed to delete old image: ${err.message}`)\n        })\n      }\n    }else{\n      imagePath = existingProduct.image;\n    }\n\n    const updatedData = {\n      ...updateProductDto,\n      image: imagePath\n    }\n\n    const updateProduct = await this.prisma.products.update({\n      where:{\n        id: id\n      },\n      data: updatedData\n    })\n    \n      return {\n        statusCode: 200,\n        message: 'School Updated successfully',\n        data: updateProduct\n      }\n  }\n\n  async remove(id: number) {\n    const productfind = await this.prisma.products.findUnique({\n      where: {\n        id: id\n      }\n    })\n\n    if(!productfind){\n      throw new HttpException ('product not found', HttpStatus.NOT_FOUND)\n    }\n\n    const deleteProduct = await this.prisma.products.delete({\n      where: {\n        id: id\n      }\n    })\n    \n      return {\n        statusCode: 200,\n        message: 'Product deleted successfully',\n        data: deleteProduct\n      }\n  \n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/RegisterDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MinLength(6)@MaxLength(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Role, {message: 'role must be one of ADMIN, STAFF, or USER'})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/RegisterDto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"@prisma/client\";\nimport { IsEmail, IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, Min, MinLength } from \"class-validator\";\n\nexport class RegisterDto {\n    @IsNotEmpty()\n    @IsString()\n    name: string;\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string;\n\n    @IsString()\n    @IsOptional()\n    phone: string;\n\n    @IsNotEmpty()\n    @IsString()\n    @MinLength(6)\n    @MaxLength(20)\n    password: string;\n\n    @IsEnum(Role, { message: \"role must be one of ADMIN, STAFF, or USER\" })\n    @IsOptional()\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.guard.ts\n            \n            injectable\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth/dto/LoginDto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/RegisterDto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/config/jwt_config.ts\n            \n            variable\n            jwt_config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderItemDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.4.15\n        \n            @prisma/client : ^6.0.1\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PaymentMethod   (src/.../create-order.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/order/dto/create-order.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentMethod\n                    \n                \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : CASH\n                            \n                        \n                        \n                            \n                                 CREDIT_CARD\n                            \n                        \n                        \n                            \n                                Value : CREDIT_CARD\n                            \n                        \n                        \n                            \n                                 DEBIT_CARD\n                            \n                        \n                        \n                            \n                                Value : DEBIT_CARD\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    7 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            jwt_config   (src/.../jwt_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/jwt_config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwt_config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret: 'secret123',\n    expired: 3600\n  }\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
